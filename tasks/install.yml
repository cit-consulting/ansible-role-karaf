---

# Install ESB

- name: "Download Karaf distribution"
  local_action:  get_url url={{ karaf_download_url }} dest=tmp/{{ karaf_distr_name }}.{{ karaf_archive_type }}
  when: karaf_download_url is defined
  run_once: true
  changed_when: false
  become: no
  tags:
    - install

- name: "Check karaf install dyrectory is not empty"
  stat:
    path: "{{ karaf_home }}"
  register: karaf_new_install_dir_created
  tags:
    - install

- name: "Get Karaf user home"
  shell: 'getent passwd "{{ karaf_os_user_name }}" | cut -d: -f6'
  changed_when: false
  register: karaf_os_user_home
  become: yes
  tags:
    - install

- name: "Check Karaf user home"
  set_fact:
    karaf_os_user_home_changed: "{{ karaf_os_user_home.stdout != karaf_install_dir + '/' + karaf_distr_name }}"

- name: "Create installation directory"
  file:
    path: "{{ karaf_install_dir }}/{{ karaf_distr_name }}"
    state: directory
  become: yes
  when: not karaf_new_install_dir_created.stat.exists

- name: "Stop Karaf service if running"
  service:
    name: "{{ karaf_service_name }}"
    state: stopped
  ignore_errors: True
  when: not karaf_new_install_dir_created.stat.exists or karaf_os_user_home_changed | bool
  become: yes
  tags:
   - install

- name: "Unregister Karaf service on Karaf home changed"
  service:
    name: "{{ karaf_service_name }}"
    enabled: no
  become: yes
  when: karaf_os_user_home_changed | bool
  ignore_errors: True
  tags:
    - install

- name: "Create Karaf system user"
  user:
    name: "{{ karaf_os_user_name }}"
    home: "{{ karaf_install_dir }}/{{ karaf_distr_name }}"
    system: yes
    state: present
  become: yes
  when: not karaf_new_install_dir_created.stat.exists or karaf_os_user_home_changed | bool
  tags:
    - install

- name: "Unarchived Karaf distribution"
  unarchive:
    src: "tmp/{{ karaf_distr_name }}.{{ karaf_archive_type }}"
    dest: "{{ karaf_install_dir }}"
  become: yes
  when: not karaf_new_install_dir_created.stat.exists
  tags:
    - install

- name: "Configure logging in org.ops4j.pax.logging.cfg"
  lineinfile:
    dest: "{{karaf_home }}/etc/org.ops4j.pax.logging.cfg"
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items: "{{ karaf_logging_properties }}"
  tags:
    - install

- name: "Configure logging rolling strategy in org.ops4j.pax.logging.cfg"
  lineinfile:
    dest: "{{karaf_home }}/etc/org.ops4j.pax.logging.cfg"
    state: present
    insertafter: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items: "{{ karaf_logging_rolling_strategy }}"
  tags:
    - install

- name: "Create directory log4j2/log4j2-gelf/1.3.1.CITC4"
  file:
    path: "{{ karaf_home }}/system/org/graylog2/log4j2/log4j2-gelf/1.3.1.CITC4"
    state: directory
  when: karaf_log_gelf_enabled
  tags:
    - install

- name: "Upload Karaf gelf logging module"
  copy:
    src: "log4j2-gelf-1.3.1.CITC4-osgi.jar"
    dest: "{{ karaf_home }}/system/org/graylog2/log4j2/log4j2-gelf/1.3.1.CITC4/log4j2-gelf-1.3.1.CITC4-osgi.jar"
  when: karaf_log_gelf_enabled
  tags:
    - install

- name: "Configure gelf logging in startup.properties"
  lineinfile:
    dest: "{{ karaf_home }}/etc/startup.properties"
    state: present
    regexp: '{{ item | replace("mvn\:", "") | regex_replace("/[0-9.]+\w+?\Z", "") }}.*$'
    line: '{{ item }} = 8'
  with_items:
    - mvn\:org.graylog2.log4j2/log4j2-gelf/1.3.1.CITC4/jar/osgi
  when: karaf_log_gelf_enabled
  tags:
    - install

- name: "Add log4j2.status and log4j2.packages on gelf logging in org.ops4j.pax.logging.cfg"
  lineinfile:
    dest: "{{karaf_home }}/etc/org.ops4j.pax.logging.cfg"
    state: present
    insertbefore: BOF
    line: "{{ item }}"
  with_items:
    - "log4j2.packages = org.graylog2.log4j2"
    - "#log4j2.status = debug"
  when: karaf_log_gelf_enabled and karaf_log_gelf_host != ''
  tags:
    - install

- name: "Configure gelf logging in org.ops4j.pax.logging.cfg"
  lineinfile:
    dest: "{{karaf_home }}/etc/org.ops4j.pax.logging.cfg"
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items: "{{ karaf_log_gelf_properties }}"
  when: karaf_log_gelf_enabled and karaf_log_gelf_host != ''
  tags:
    - install

- name: "Anjust filesystem access mode on Karaf dir"
  become: yes
  file:
    path: '{{ karaf_install_dir }}/{{ karaf_distr_name }}'
    owner: '{{ karaf_os_user_name }}'
    group: '{{ karaf_os_user_name }}'
    recurse: 'yes'
    state: 'directory'
  changed_when: false

- include: "configure-karaf.yml"
  when: not karaf_new_install_dir_created.stat.exists

# Install service wrapper
- name: "Check wrapper.conf availability"
  stat:
    path: "{{karaf_home }}/etc/{{ karaf_service_name }}-wrapper.conf"
  register: karaf_wrapper_conf_path_validation
  tags:
    - install

- name: "Set environment for karaf"
  lineinfile:
    dest: "{{karaf_home }}/bin/setenv"
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items: "{{ karaf_environment_default_options }}"
  tags:
    - config

- name: "Stop Karaf before first run"
  shell: '{{ karaf_home }}/bin/stop'
  ignore_errors: True
  when: not karaf_wrapper_conf_path_validation.stat.exists
  become: yes
  become_user: "{{ karaf_os_user_name }}"
  tags:
   - install

- name: "First start Karaf"
  shell: 'su - {{ karaf_os_user_name }} -c {{karaf_home }}/bin/start'
  when: not karaf_wrapper_conf_path_validation.stat.exists
  become: yes
  tags:
   - install

- name: "Wait for Karaf to start"
  wait_for:
    port: "{{ karaf_ssh_port }}"
    timeout: 30
  when: not karaf_wrapper_conf_path_validation.stat.exists
  tags:
    - install

- name: "Pause for Karaf to start "
  pause:
    seconds: "{{ karaf_time_pause_to_ferst_start }}"
  when: not karaf_wrapper_conf_path_validation.stat.exists and karaf_pause_to_ferst_start == "yes"
  tags:
    - install

- name: "Generate service script"
  shell: "{{ item }}"
  with_items:
    - '{{ karaf_connect_to_local_Karaf_instance }} "feature:install wrapper"'
    - '{{ karaf_connect_to_local_Karaf_instance }} "wrapper:install -n {{ karaf_service_name }} -d {{ karaf_service_name }} -D "{{ karaf_service_name }}""'
  when: not karaf_wrapper_conf_path_validation.stat.exists
  become: yes
  become_user: "{{ karaf_os_user_name }}"
  tags:
   - install

- name: "Stop Karaf"
  shell: '{{karaf_home }}/bin/stop'
  when: not karaf_wrapper_conf_path_validation.stat.exists
  become: yes
  become_user: "{{ karaf_os_user_name }}"
  tags:
   - install

- name: "Configure service user"
  lineinfile:
    dest: "{{ karaf_home }}/bin/{{ karaf_service_link_name }}"
    state: present
    regexp: "^#?RUN_AS_USER.*$"
    line: "RUN_AS_USER={{ karaf_os_user_name }}"
  become: yes
  tags:
    - install

- name: "Create service simlink"
  file:
    src: "{{karaf_home }}/bin/{{ karaf_service_link_name }}"
    dest: "/etc/init.d/{{ karaf_service_name }}"
    state: link
  when: ansible_service_mgr is defined and ansible_service_mgr != 'systemd'
  tags:
   - install

- include: "configure-wrapper.yml"
  when: not karaf_wrapper_conf_path_validation.stat.exists

- name: "Patch wrapper systemd unit"
  lineinfile:
    dest: "{{ karaf_home }}/bin/{{ karaf_service_name }}.service"
    state: present
    regexp: "Alias\\s*="
    line: "Alias={{ karaf_service_name }}.service"
  when: ansible_service_mgr is defined and ansible_service_mgr == 'systemd'

- name: "Register Karaf service on systemd"
  shell: 'systemctl enable {{ karaf_home }}/bin/{{ karaf_service_name }}.service'
  become: yes
  register: karaf_service_registered_on_systemd
  when: (ansible_service_mgr is defined and ansible_service_mgr == 'systemd' and not karaf_new_install_dir_created.stat.exists)
            or (ansible_service_mgr is defined and ansible_service_mgr == 'systemd' and karaf_os_user_home_changed | bool)
  tags:
   - install

- name: "Register Karaf service"
  service:
    name: "{{ karaf_service_name }}"
    enabled: yes
  become: yes
  register: karaf_service_registered
  when: ansible_service_mgr is defined and ansible_service_mgr != 'systemd'
  tags:
    - install

- name: "Start Karaf service"
  service:
    name: "{{ karaf_service_name }}"
    state: started
  become: yes
  tags:
    - install
