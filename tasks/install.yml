---

# Install ESB

#TODO replace with unarchive module when bug #7258 will be fixed

- name: Dowload Karaf distribution
  local_action:  get_url url={{ karaf_downoal_url }} dest=tmp/{{ karaf_distr_name }}.{{ karaf_archive_type }}
  when: karaf_downoal_url is defined
  run_once: true
  changed_when: false
  sudo: no
  tags:
    - install

- name: Upload Karaf distribution on target host
  copy:
    src: "tmp/{{ karaf_distr_name }}.{{ karaf_archive_type }}"
    dest: "/opt/"
  tags:
    - install

- name: Unarchived Karaf distribution
  shell: unzip -o {{ karaf_install_dir }}.{{ karaf_archive_type }}
  args:
    chdir: "/opt/"
    creates: "{{ karaf_install_dir }}"
  when: karaf_archive_type == "zip"
  register: karaf_new_install_dir_created
  sudo: yes
  tags:
    - install

- name: Unarchived {{ karaf_archive_type }} ESB {{ karaf_distr_name }}
  shell: tar xzf {{ karaf_install_dir }}.{{ karaf_archive_type }}
  args:
    chdir: "/opt/"
    creates: "{{ karaf_install_dir }}"
  when: karaf_archive_type == "tar.gz"
  register: karaf_new_install_dir_created
  sudo: yes
  tags:
    - install

- name: Create Karaf system user
  user: name={{ karaf_os_user_name }} home={{ karaf_install_dir }} system=yes state=present
  tags:
    - install

- name: Create directory karaf-extended-logging/1.0.0/
  file: "path={{ karaf_home }}/system/ru/citc/karaf/karaf-extended-logging/1.0.0 state=directory"
  when: karaf_use_extended_logging and karaf_new_install_dir_created.changed
  tags:
    - install

- name: Upload Karaf extended logging module
  copy:
    src: "karaf-extended-logging-1.0.0.jar"
    dest: "{{ karaf_home }}/system/ru/citc/karaf/karaf-extended-logging/1.0.0/karaf-extended-logging-1.0.0.jar"
  when: karaf_use_extended_logging and karaf_new_install_dir_created.changed
  tags:
    - install

- name: Configure extended logging in startup.properties
  lineinfile:
    dest: "{{ karaf_home }}/etc/startup.properties"
    state: present
    insertbefore: '^org/ops4j/pax/logging/pax-logging-api/.*$'
    line: 'ru/citc/karaf/karaf-extended-logging/1.0.0/karaf-extended-logging-1.0.0.jar=7'
  when: karaf_use_extended_logging and karaf_new_install_dir_created.changed
  tags:
    - install

- name: Configure extended logging in org.ops4j.pax.logging.cfg
  lineinfile:
    dest: "{{karaf_home }}/etc/org.ops4j.pax.logging.cfg"
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items: karaf_logging_properties
  when: karaf_use_extended_logging and karaf_new_install_dir_created.changed
  tags:
    - install

- name: Anjust filesystem access mode on Karaf dir
  shell: chown -R {{ karaf_os_user_name }}:{{ karaf_os_user_name }} {{ karaf_install_dir }}
  when: karaf_new_install_dir_created.changed
  sudo: yes
  tags:
    - install

- include: "configure-karaf.yml"
  when: karaf_new_install_dir_created.changed

# Install service wrapper
- name: Check wrapper.conf availability
  stat: path={{karaf_home }}/etc/{{ karaf_service_name }}-wrapper.conf
  register: karaf_wrapper_conf_path_validation
  tags:
    - install

- name: "Stop Karaf before first run"
  shell: '{{ karaf_home }}/bin/stop'
  ignore_errors: True
  when: not karaf_wrapper_conf_path_validation.stat.exists
  sudo: yes
  sudo_user: "{{ karaf_os_user_name }}"
  environment:
    JAVA_HOME: "{{ karaf_java_home }}"
  tags:
   - install

## Ansible kills parent process for some reason...
#- name: "First start Karaf"
#  shell: '{{ karaf_home }}/bin/start'
#  args:
#    chdir: "{{ karaf_install_dir }}"
#  when: not karaf_wrapper_conf_path_validation.stat.exists
#  sudo: yes
#  sudo_user: "{{ karaf_os_user_name }}"
#  environment:
#    JAVA_HOME: "{{ karaf_java_home }}"
#    KARAF_REDIRECT: "{{ karaf_home }}/startup.log"
#  tags:
#   - install
- name: "First start Karaf"
  shell: 'su - {{ karaf_os_user_name }} -c {{karaf_home }}/bin/start'
  when: not karaf_wrapper_conf_path_validation.stat.exists
  sudo: yes
  tags:
   - install

- name: "Wait for Karaf to start"
  wait_for: "port={{ karaf_ssh_port }} timeout=30"
  when: not karaf_wrapper_conf_path_validation.stat.exists
  tags:
    - install

- name: "Generate service script"
  shell: "{{ item }}"
  with_items:
    - '{{ karaf_home }}/bin/client -u {{ karaf_admin_user }} -p {{ karaf_admin_pass }} -h 127.0.0.1 -a {{ karaf_ssh_port }} "features:install wrapper"'
    - '{{ karaf_home }}/bin/client -u {{ karaf_admin_user }} -p {{ karaf_admin_pass }} -h 127.0.0.1 -a {{ karaf_ssh_port }} "wrapper:install -n {{ karaf_service_name }} -d {{ karaf_service_name }} -D "{{ karaf_service_name }}""'
  when: not karaf_wrapper_conf_path_validation.stat.exists
  sudo: yes
  sudo_user: "{{ karaf_os_user_name }}"
  environment:
    JAVA_HOME: "{{ karaf_java_home }}"
  tags:
   - install

- name: "Stop Karaf"
  shell: '{{karaf_home }}/bin/stop'
  when: not karaf_wrapper_conf_path_validation.stat.exists
  sudo: yes
  sudo_user: "{{ karaf_os_user_name }}"
  environment:
    JAVA_HOME: "{{ karaf_java_home }}"
  tags:
   - install

- name: Configure service user
  lineinfile:
    dest: "{{ karaf_home }}/bin/{{ karaf_service_link_name }}"
    state: present
    regexp: "^#?RUN_AS_USER.*$"
    line: "RUN_AS_USER={{ karaf_os_user_name }}"
  sudo: yes
  when: not karaf_wrapper_conf_path_validation.stat.exists
  tags:
    - install

- name: "Create service simlink"
  file: src={{karaf_home }}/bin/{{ karaf_service_link_name }} dest=/etc/init.d/{{ karaf_service_link_name }} state=link
  when: not karaf_wrapper_conf_path_validation.stat.exists
  tags:
   - install

- include: "configure-wrapper.yml"
  when: not karaf_wrapper_conf_path_validation.stat.exists

- name: "Register and start service"
  service: name={{ karaf_service_link_name }} enabled=yes state=started
  when: not karaf_wrapper_conf_path_validation.stat.exists
  sudo: yes
  tags:
    - install