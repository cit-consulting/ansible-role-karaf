---

- name: "Download JCE distribution"
  local_action:  get_url url={{ karaf_jcp_download_url }} dest=tmp/jcp-{{ karaf_jcp_version }}.{{ karaf_jcp_archive_type }}
  when: karaf_jcp_download_url is defined
  run_once: true
  changed_when: false
  become: no
  tags:
    - install

#TODO check if exists
- name: "Check installation JCE"
  become: yes
  lineinfile:
    dest: "{{ karaf_home }}/lib/ext/jcp-intalled.ver"
    line: "{{ karaf_jcp_version }}"
    create: yes
  register: jcp_install
  tags:
    - installJCP

- name: "Create installation JCE directory"
  become: yes
  file:
    path: "/tmp/{{ karaf_jcp_version }}"
    state: directory
  when: jcp_install.changed
  ignore_errors: True
  tags:
    - installJCP

#TODO errors when differents encoding in filenames (fixed on 2.0.X)
- name: "Unarchived JCP distribution"
  become: yes
  unarchive:
    src: 'tmp/jcp-{{ karaf_jcp_version }}.{{ karaf_jcp_archive_type }}'
    dest: '/tmp/{{ karaf_jcp_version }}'
  when: jcp_install.changed
  ignore_errors: True
  tags:
    - installJCP

- name: "Backup java.security"
  become: yes
  copy:
    src: '{{ karaf_java_home }}/jre/lib/security/java.security'
    dest: '{{ karaf_java_home }}/jre/lib/security/java.security.back'
    remote_src: True
  when: jcp_install.changed
  tags:
    - installJCP

- name: "Install JCP"
  become: yes
  shell: '{{ karaf_java_home }}/bin/java -cp "/tmp/{{ karaf_jcp_version }}/jcp-{{ karaf_jcp_version }}/JCPinst.jar" ru.CryptoPro.Install.VariantTwo -install -verbose
             {% if karaf_jcp_serial|d() %} -serial "{{ karaf_jcp_serial }}" -company "{{ karaf_jcp_company }}" {% endif %}'
  when: jcp_install.changed
  tags:
    - installJCP

- name: "Copy CryptoPro files"
  copy:
    src: '/tmp/{{ karaf_jcp_version }}/jcp-{{ karaf_jcp_version }}/{{ item }}'
    dest: '{{ karaf_home }}/lib/ext/{{ item | regex_replace("^.*/(.*)$", "\\1") }}'
    remote_src: True
  with_items: '{{ karaf_jcp_files }}'
  when: jcp_install.changed and item is defined
  tags:
    - installJCP

- name: "Restore java.security"
  become: yes
  copy:
    src: '{{ karaf_java_home }}/jre/lib/security/java.security.back'
    dest: '{{ karaf_java_home }}/jre/lib/security/java.security'
    remote_src: True
  when: jcp_install.changed
  tags:
    - installJCP

- name: "Cleanup CryptoPro files"
  become: yes
  file:
    path: '{{ karaf_java_home }}/jre/lib/ext/{{ item }}'
    state: 'absent'
  with_items: '{{ karaf_jcp_files }}'
  when: jcp_install.changed and item is defined
  notify: Karaf restart
  tags:
    - installJCP
