---

- name: "Install features: Find the full features install list with versions"
  set_fact:
    full_features_install_list_with_versions: '{% for features in karaf_features %}{{ features.name }}/{{ features.version }} {% endfor %}'

- name: "Install features: Find the full features install list without versions"
  set_fact:
    full_features_install_list_without_versions: '{{ full_features_install_list_with_versions | regex_replace("(/\S+)\s", "|") | regex_replace("(^.*)(.$)", "\\1") }}'

- name: "Install features: Preparation the full features install list for grep"
  set_fact:
    full_features_install_list_for_grep: "feature:list -i --no-format | grep '^({{ full_features_install_list_without_versions }})\\s'"

- name: "Install features: Wait for Karaf to start"
  wait_for: "port={{ karaf_ssh_port }} timeout=30"
  tags:
    - install-features

- name: "Install features: Add features configs"
  sudo: yes
  template:
    src: "{{ karaf_path_features_configs }}{{ '/' ~ karaf_environment_configs if karaf_environment_configs is defined else '' }}/{{ item.1 }}"
    dest: '{{ karaf_home }}/etc/{{ item.1 | regex_replace(".j2", "") }}'
    owner: "{{ karaf_os_user_name }}"
    group: "{{ karaf_os_user_name }}"
    mode: 0644
    backup: yes
  with_subelements:
    - karaf_features
    - conf_files
  tags:
    - install-features

- name: "Install features: Add external data source"
  sudo: yes
  template:
    src: "{{ karaf_path_features_configs }}{{ '/' ~ karaf_environment_configs if karaf_environment_configs is defined else '' }}/{{ item.1 }}"
    dest: '{{ karaf_home }}/deploy/{{ item.1 | regex_replace(".j2", "") }}'
    owner: "{{ karaf_os_user_name }}"
    group: "{{ karaf_os_user_name }}"
    mode: 0644
    backup: yes
  with_subelements:
    - karaf_features
    - data_source_files
  tags:
    - install-features

- name: "Install features: Add features url"
  shell: '{{ karaf_connect_to_local_Karaf_instance }} "feature:repo-add {{ item.url }}/xml/features"'
  changed_when: false
  sudo: yes
  sudo_user: "{{ karaf_os_user_name }}"
  environment:
    JAVA_HOME: "{{ karaf_java_home }}"
  with_items: karaf_features
  tags:
    - install-features

- name: "Install features: Update features"
  shell: '{{ karaf_connect_to_local_Karaf_instance }} "feature:install -t -v {{ full_features_install_list_with_versions }}"'
  sudo: yes
  sudo_user: "{{ karaf_os_user_name }}"
  changed_when: false
  environment:
    JAVA_HOME: "{{ karaf_java_home }}"
  register: karaf_new_feature_install
  tags:
    - install-features

- name: "Install features: Check features install"
  shell: '{{ karaf_connect_to_local_Karaf_instance }} "{{ full_features_install_list_for_grep }}" >/tmp/feature.txt'
  changed_when: false
  sudo: yes
  environment:
    JAVA_HOME: "{{ karaf_java_home }}"
  when: not karaf_new_feature_install.stdout|search("No deployment change")
  tags:
    - install-features

- name: "Replace features in the file feature.txt"
  replace:
    dest: "/tmp/feature.txt"
    regexp: '(?m)^(\S+)\s+(\S+)(.*)'
    replace: '\1/\2'
  when: not karaf_new_feature_install.stdout|search("No deployment change")
  tags:
    - install-features

- name: "Preparation features list for uninstall"
  lineinfile:
    dest: "/tmp/feature.txt"
    regexp: '{{ item.name }}/{{ item.version }}'
    state: absent
  with_items: karaf_features
  when: not karaf_new_feature_install.stdout|search("No deployment change")
  tags:
    - install-features

- name: "Get features list for uninstall"
  shell: 'cat /tmp/feature.txt'
  register: karaf_find_feature_to_uninstall
  when: not karaf_new_feature_install.stdout|search("No deployment change")

- name: "Install features: Uninstall features"
  shell: '{{ karaf_connect_to_local_Karaf_instance }} "feature:uninstall {% for features in karaf_find_feature_to_uninstall.stdout_lines %}{{ features }} {% endfor %}"'
  sudo: yes
  sudo_user: "{{ karaf_os_user_name }}"
  environment:
    JAVA_HOME: "{{ karaf_java_home }}"
  when: not karaf_new_feature_install.stdout|search("No deployment change") and karaf_find_feature_to_uninstall.stdout_lines
  tags:
    - install-features

- name: "Install feature: Pause for Uninstall features"
  pause:
    seconds: "5"
  when: not karaf_new_feature_install.stdout|search("No deployment change")
  tags:
    - install

- name: "Install features: Install features"
  shell: '{{ karaf_connect_to_local_Karaf_instance }} "feature:install {{ full_features_install_list_with_versions }}"'
  sudo: yes
  sudo_user: "{{ karaf_os_user_name }}"
  environment:
    JAVA_HOME: "{{ karaf_java_home }}"
  when: not karaf_new_feature_install.stdout|search("No deployment change")
  tags:
    - install-features

- name: "Install features: Wait Services"
  shell: '{{ karaf_connect_to_local_Karaf_instance }} "service:wait -e -t {{ karaf_timeout_to_wait_service }} {{ item.wait_service }}"'
  sudo: yes
  sudo_user: "{{ karaf_os_user_name }}"
  environment:
    JAVA_HOME: "{{ karaf_java_home }}"
  when: item.wait_service is defined and not karaf_new_feature_install.stdout|search("No deployment change")
  with_items: karaf_features
  tags:
    - install-features

- name: "Install feature: Restart Karaf"
  action: shell echo "Restart Karaf"
  notify: Karaf configuration changed
  when: item.restart_karaf == "yes" and not karaf_new_feature_install.stdout|search("No deployment change")
  with_items: karaf_features
  sudo: yes
  tags:
    - install-features
