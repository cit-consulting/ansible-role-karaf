---

# Install ESB

  - name: Wrapper.conf path validation
    stat: path={{InstallESB_esb_type_path }}/etc/{{ InstallESB_esb_user_name }}-wrapper.conf
    register: InstallESB_wrapper_conf_path_validation
    tags:
      - esbinstall

  - name: Copy ESB {{ InstallESB_esb_distr_name }}
    copy: src={{ InstallESB_esb_distr_name }}.{{ InstallESB_archive_type }} dest=/opt/
    tags:
      - esbinstall

  - name: Unarchived {{ InstallESB_archive_type }} ESB {{ InstallESB_esb_distr_name }}
    shell: unzip -o {{ InstallESB_esb_dir }}.{{ InstallESB_archive_type }}
      chdir=/opt/
    when: not InstallESB_wrapper_conf_path_validation.stat.exists and InstallESB_archive_type == "zip"
    sudo: yes
    tags:
      - esbinstall

  - name: Unarchived {{ InstallESB_archive_type }} ESB {{ InstallESB_esb_distr_name }}
    shell: tar xzf {{ InstallESB_esb_dir }}.{{ InstallESB_archive_type }}
      chdir=/opt/
    when: not InstallESB_wrapper_conf_path_validation.stat.exists and InstallESB_archive_type == "tar.gz"
    sudo: yes
    tags:
      - esbinstall

  - name: Create new system user
    user: name={{ InstallESB_esb_user_name }} home={{ InstallESB_esb_dir }} system=yes state=present
    when: not InstallESB_wrapper_conf_path_validation.stat.exists
    tags:
      - esbinstall

  - name: Create directory karaf-extended-logging/1.0.0/
    shell: mkdir -p {{ InstallESB_esb_type_path }}/system/ru/citc/karaf/karaf-extended-logging/1.0.0/
    when: not InstallESB_wrapper_conf_path_validation.stat.exists
    tags:
      - esbinstall

  - name: Download karaf-extended-logging-1.0.0.jar
    shell: 'wget "http://maven1.citc.ru/content/groups/ru.citc/ru/citc/karaf/karaf-extended-logging/1.0.0/karaf-extended-logging-1.0.0.jar"
      -O {{ InstallESB_esb_type_path }}/system/ru/citc/karaf/karaf-extended-logging/1.0.0/karaf-extended-logging-1.0.0.jar creates={{InstallESB_esb_type_path }}/system/ru/citc/karaf/karaf-extended-logging/1.0.0/karaf-extended-logging-1.0.0.jar'
    when: not InstallESB_wrapper_conf_path_validation.stat.exists
    tags:
      - esbinstall

  - name: Configure startup.properties
    lineinfile:
      dest: "{{ InstallESB_esb_type_path }}/etc/startup.properties"
      state: present
      insertbefore: '^org/ops4j/pax/logging/pax-logging-api/.*$'
      line: 'ru/citc/karaf/karaf-extended-logging/1.0.0/karaf-extended-logging-1.0.0.jar=7'
    when: not InstallESB_wrapper_conf_path_validation.stat.exists
    tags:
      - esbinstall

  - name: Configure org.ops4j.pax.logging.cfg
    lineinfile:
      dest: "{{InstallESB_esb_type_path }}/etc/org.ops4j.pax.logging.cfg"
      state: present
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    with_items: Log4j
    when: not InstallESB_wrapper_conf_path_validation.stat.exists
    tags:
      - esbinstall

  - name: Update {{ InstallESB_esb_distr_name }} mode
    shell: chown -R {{ InstallESB_esb_user_name }}:{{ InstallESB_esb_user_name }} {{ InstallESB_esb_dir }}
    when: not InstallESB_wrapper_conf_path_validation.stat.exists
    sudo: yes
    tags:
      - esbinstall

# Service ESB

  - name: "Stop ESB"
    shell: 'su - {{ InstallESB_esb_user_name }} - c {{InstallESB_esb_type_path }}/bin/stop'
    ignore_errors: True
    when: not InstallESB_wrapper_conf_path_validation.stat.exists
    sudo: yes
    tags:
     - esbinstall

  - name: "Run ESB"
    shell: 'su - {{ InstallESB_esb_user_name }} -c {{InstallESB_esb_type_path }}/bin/start'
    when: not InstallESB_wrapper_conf_path_validation.stat.exists
    sudo: yes
    tags:
     - esbinstall

  - name: "Wait for ESB to start"
    wait_for: port={{ 8101 }} timeout=30
    when: not InstallESB_wrapper_conf_path_validation.stat.exists
    tags:
      - esbinstall

  - name: "Install Wrapper TALEND"
    shell: "{{ item }}"
    with_items:
      - '{{ InstallESB_esb_type_path }}/bin/client -h 127.0.0.1 "features:install wrapper"'
      - '{{ InstallESB_esb_type_path }}/bin/client -h 127.0.0.1 "wrapper:install -n {{ InstallESB_esb_user_name }} -d {{ InstallESB_esb_user_name }} -D "{{ InstallESB_esb_user_name }}""'
    when: not InstallESB_wrapper_conf_path_validation.stat.exists and InstallESB_esb_type == "talend"
    sudo: yes
    sudo_user: "{{ InstallESB_esb_user_name }}"
    tags:
     - esbinstall

  - name: "Install Wrapper KARAF"
    shell: "{{ item }}"
    with_items:
      - '{{ InstallESB_esb_type_path }}/bin/client -h 127.0.0.1 "feature:install wrapper"'
      - '{{ InstallESB_esb_type_path }}/bin/client -h 127.0.0.1 "wrapper:install -n {{ InstallESB_esb_user_name }} -d {{ InstallESB_esb_user_name }} -D "{{ InstallESB_esb_user_name }}""'
    when: not InstallESB_wrapper_conf_path_validation.stat.exists and InstallESB_esb_type == "karaf"
    sudo: yes
    sudo_user: "{{ InstallESB_esb_user_name }}"
    tags:
     - esbinstall

  - pause: seconds=10
    when: not InstallESB_wrapper_conf_path_validation.stat.exists
    tags:
     - esbinstall

  - name: "Stop ESB"
    shell: '{{InstallESB_esb_type_path }}/bin/stop'
    when: not InstallESB_wrapper_conf_path_validation.stat.exists
    sudo: yes
    sudo_user: "{{ InstallESB_esb_user_name }}"
    tags:
     - esbinstall

  - name: "Simpllink path validation"
    stat: path=/etc/init.d/{{ esb_service_name }}
    register: InstallESB_Simpllink_path_validation
    when: not InstallESB_wrapper_conf_path_validation.stat.exists
    tags:
     - esbinstall

  - name: "Create simpllink service ESB"
    action:
      shell
        ln -s {{InstallESB_esb_type_path }}/bin/{{ esb_service_name }}  /etc/init.d/ &&
        chkconfig --add {{ esb_service_name }} &&
        chkconfig --list
    when: not InstallESB_wrapper_conf_path_validation.stat.exists and not InstallESB_Simpllink_path_validation.stat.exists
    tags:
     - esbinstall

  - name: Configure {{ esb_service_name }}
    lineinfile:
      dest: "{{InstallESB_esb_type_path }}/bin/{{ esb_service_name }}"
      state: present
      regexp: "^#?RUN_AS_USER.*$"
      line: "RUN_AS_USER={{ InstallESB_esb_user_name }}"
    when: not InstallESB_wrapper_conf_path_validation.stat.exists
    tags:
      - esbinstall

  - name: Configure {{ InstallESB_esb_user_name }}-wrapper
    lineinfile:
      dest: "{{InstallESB_esb_type_path }}/etc/{{ InstallESB_esb_user_name }}-wrapper.conf"
      state: present
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    with_items: Wrapper_conf
    when: not InstallESB_wrapper_conf_path_validation.stat.exists
    tags:
      - esbinstall

  - name: Configure {{ InstallESB_esb_user_name }}-wrapper
    lineinfile:
      dest: "{{InstallESB_esb_type_path }}/etc/{{ InstallESB_esb_user_name }}-wrapper.conf"
      state: present
      insertafter: "{{ item.regexp }}"
      line: "{{ item.line }}"
    with_items: Wrapper_conf_
    when: not InstallESB_wrapper_conf_path_validation.stat.exists
    tags:
      - esbinstall

  - name: "Start ESB_Service"
    service: name={{ esb_service_name }} enabled=yes state=restarted
#    when: not InstallESB_wrapper_conf_path_validation.stat.exists
    sudo: yes
    sudo_user: "{{ InstallESB_esb_user_name }}"
    tags:
      - esbinstall